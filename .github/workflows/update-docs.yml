name: Update Docs

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  update-docs:
    runs-on: windows-latest
    env:
      REPO: ${{ github.repository }}
      USER_NAME: "abgox"
      USER_EMAIL: "abgohxf@outlook.com"
    steps:
      - name: Setup SSH
        shell: pwsh
        env:
          SSH_CONFIG: ${{ secrets.SSH_CONFIG }}
          SSH_ID_RSA_GITHUB: ${{ secrets.SSH_ID_RSA_GITHUB }}
        run: |
          $sshDir = "$env:UserProfile\.ssh"
          New-Item -Path $sshDir -ItemType Directory -Force

          # Write key files
          $env:SSH_CONFIG | Out-File "$sshDir\config" -Encoding utf8NoBOM -NoNewline
          $env:SSH_ID_RSA_GITHUB | Out-File "$sshDir\id_rsa_github" -Encoding utf8NoBOM -NoNewline

          try {
              ssh-keyscan github.com 2>$null | Out-File "$sshDir\known_hosts" -Encoding utf8NoBOM
              if (-not (Test-Path "$sshDir\known_hosts") -or (Get-Content "$sshDir\known_hosts" -Raw).Trim().Length -eq 0) {
                  throw "ssh-keyscan failed"
              }
          } catch {
              Write-Host "::error::Failed to generate known_hosts, disabling host key verification..." -ForegroundColor Red
              git config --global core.sshCommand "ssh -o StrictHostKeyChecking=no"
          }

      - name: Configure Git
        shell: pwsh
        run: |
          git config --global user.name $env:USER_NAME
          git config --global user.email $env:USER_EMAIL

      - name: Verify SSH
        shell: pwsh
        run: |
          ssh -T git@github.com

      - name: Update
        shell: pwsh
        run: |
          git clone --depth 1 "git@github.com:abgox/schema-docs.git" schema-docs
          cd schema-docs
          .\scripts\download-schema-json.ps1
          git add .
          git commit -m "chore: automatically update some content"
          git push --force

      - name: Cleanup SSH
        if: always()
        shell: pwsh
        run: |
          Remove-Item "$HOME\.ssh" -Recurse -Force -ErrorAction SilentlyContinue
